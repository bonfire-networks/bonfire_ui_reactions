<div class="relative z-20 flex items-center">
  {#case is_nil(current_user_id(@__context__)) or !@object_boundary or
      Bonfire.Boundaries.can?(@__context__, :like, @object_boundary)}
    {#match true}
      <button
        :if={@object_id}
        id={@id}
        data-id="like_action"
        data-role="like_enabled"
        phx-click="Bonfire.Social.Likes:like"
        phx-value-direction={if @my_like, do: "down", else: "up"}
        phx-value-id={@object_id}
        phx-target={@myself}
        phx-value-component={__MODULE__}
        phx-value-current_count={e(@like_count, 0)}
        class="btn btn-ghost btn-circle group hover:bg-amber-400/10 like like_with_label btn-sm flex gap-1"
      >
        {#case @my_like}
          {#match %{summary: emoji} when is_binary(emoji)}
            <span class="text-amber-400 text-[20px]">{emoji}</span>
          {#match %{media_type: "emoji"} = emoji}
            <LazyImage
              parent_id={["emoji", @id, id(emoji)]}
              class="w-5 h-5"
              media={emoji}
              alt={e(emoji, :metadata, "label", nil) || e(emoji, :metadata, "shortcode", nil)}
            />
          {#match yes when not is_nil(yes) and yes != false}
            <#Icon iconify="mingcute:fire-fill" class="text-amber-400 w-5 h-5" />
          {#match _}
            <#Icon
              iconify="mingcute:fire-line"
              class="text-base-content/50 group-hover:text-amber-400 w-5 h-5"
            />
        {/case}

        <span :if={!@my_like} class="sr-only">
          {l("Like")}
        </span>
        <span :if={@my_like} class="sr-only">
          {l("Liked")}
        </span>
      </button>
      <span
        data-role="like_count"
        class="ml-1 text-[13px] text-base-content/70"
        :if={Bonfire.Common.Settings.get([:ui, :show_activity_counts], false, @__context__) &&
          e(@like_count, 0) > 0}
      >{e(@like_count, 0)}</span>
    {#match _}
      <button
        type="button"
        data-role="like_disabled"
        class="cursor-not-allowed btn btn-ghost btn-circle like like_with_label btn-sm flex gap-1"
        title={l("You can't like this")}
      >
        <span class="text-base-content/20">
          <#Icon iconify="mingcute:fire-fill" class="w-5 h-5" />
        </span>

        <span class="sr-only">
          {l("Cannot Like")}
        </span>
        <span :if={Bonfire.Common.Settings.get([:ui, :show_activity_counts], false, @__context__) &&
          e(@like_count, 0) > 0}>{e(@like_count, 0)}</span>
      </button>
  {/case}


<StatelessComponent
  module={maybe_component(Bonfire.UI.Reactions.EmojiReactionsLive, @__context__)}
  object_id={@object_id}
  myself={@myself}
  parent_id={[@id || @object_id, "emoji_react"]}
/>
</div>